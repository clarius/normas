name: upload
on:
  push:
    branches:
      - main
    paths:
      - '*/data/*.json'
      - '*/*.md'

defaults:
  run:
    shell: pwsh

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ðŸ”Ž json changes
        id: json-changes
        uses: tj-actions/changed-files@v46.0.3
        with:
            files: '*/data/*.json'

      - name: ðŸ”Ž markdown changes
        id: md-changes
        uses: tj-actions/changed-files@v46.0.3
        with:
            files: '*/*.md'

        # AZURE_CREDENTIALS created with: az ad sp create-for-rbac --name <name> --role "Storage Blob Data Contributor" --scopes /subscriptions/<id>/resourceGroups/<name>/providers/Microsoft.Storage/storageAccounts/<name> --sdk-auth
      - name: ðŸ”“ azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}        

      - name: ðŸ”¼ upload
        if: steps.json-changes.outputs.all_changed_files != '' || steps.md-changes.outputs.all_changed_files != ''
        env:
          CHANGED_JSON: ${{ steps.json-changes.outputs.all_changed_files }}
          CHANGED_MD: ${{ steps.md-changes.outputs.all_changed_files }}
          AZURE_BLOB_URL: ${{ vars.AZURE_BLOB_URL }}
          AZCOPY_AUTO_LOGIN_TYPE: AZCLI
          AZCOPY_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
            az account show | jq '.name + " (" + .user.name + ")"'
            
            # We first upload JSON files so that the markdown processing can fetch them if needed
            $files = $env:CHANGED_JSON -split ' '
            foreach ($file in $files) {
                if (-not (test-path $file -PathType Leaf)) { continue }
                $blob = "$env:AZURE_BLOB_URL$([System.IO.Path]::GetFileName($file))"
                $metadata = $(az storage blob metadata show --blob-url $blob --auth-mode login | jq -r 'to_entries | map("\(.key)=\(.value)") | join(";")' 2>$null) ?? ''
                $result = & azcopy copy $file $blob --overwrite=ifSourceNewer --metadata $metadata --content-type="application/json; charset=utf-8"

                if ($LASTEXITCODE -ne 0) {
                    write-error "Failed to upload $file to blob storage: $result"
                    exit $LASTEXITCODE
                }

                write-output "âœ… $file > $blob"
            }

            # Then we upload the markdown files
            $files = $env:CHANGED_MD -split ' '
            foreach ($file in $files) {
                if (-not (test-path $file -PathType Leaf)) { continue }
                $blob = "$env:AZURE_BLOB_URL$([System.IO.Path]::GetFileName($file))"
                $metadata = $(az storage blob metadata show --blob-url $blob --auth-mode login | jq -r 'to_entries | map("\(.key)=\(.value)") | join(";")' 2>$null) ?? ''
                $result = & azcopy copy $file $blob --overwrite=ifSourceNewer --metadata $metadata --content-type="text/markdown; charset=utf-8"

                if ($LASTEXITCODE -ne 0) {
                    write-error "Failed to upload $file to blob storage: $result"
                    exit $LASTEXITCODE
                }

                write-output "âœ… $file > $blob"
            }
